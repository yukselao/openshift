#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  dontlognull
    option                  http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend api
    mode tcp
    bind *:6443
    default_backend api

backend api
    mode tcp
    balance roundrobin
    server control-plane-0 control-plane-0.data.tr.ibm.com:6443 check
    server control-plane-1 control-plane-1.data.tr.ibm.com:6443 check
    server control-plane-2 control-plane-2.data.tr.ibm.com:6443 check
    server bootstrap bootstrap.data.tr.ibm.com:6443 check

frontend machine-config
    mode tcp
    bind *:22623
    default_backend machine-config

backend machine-config
    mode tcp
    balance roundrobin
    server control-plane-0 control-plane-0.data.tr.ibm.com:22623 check
    server control-plane-1 control-plane-1.data.tr.ibm.com:22623 check
    server control-plane-2 control-plane-2.data.tr.ibm.com:22623 check
    server bootstrap bootstrap.data.tr.ibm.com:22623 check

frontend https
    mode tcp
    bind *:443
    default_backend https

backend https
    mode tcp
    balance roundrobin
    server compute-0 compute-0.data.tr.ibm.com:443 check
    server compute-1 compute-1.data.tr.ibm.com:443 check
    server compute-2 compute-2.data.tr.ibm.com:443 check
    server storage0 storage0.data.tr.ibm.com:443 check
    server storage1 storage1.data.tr.ibm.com:443 check
    server storage2 storage2.data.tr.ibm.com:443 check

frontend http
    mode tcp
    bind *:80
    default_backend http

backend http
    mode tcp
    balance roundrobin
    server compute-0 compute-0.data.tr.ibm.com:80 check
    server compute-1 compute-1.data.tr.ibm.com:80 check
    server compute-2 compute-2.data.tr.ibm.com:80 check
    server storage0 storage0.data.tr.ibm.com:80 check
    server storage1 storage1.data.tr.ibm.com:80 check
    server storage2 storage2.data.tr.ibm.com:80 check
